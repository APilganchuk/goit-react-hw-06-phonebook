{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","type","pattern","title","required","onChange","Component","Filter","input","ContactList","contactList","onDeleteContact","map","id","item","button","onClick","App","contacts","filter","addContact","newContacts","uuidv4","contact","includes","alert","prevState","deleteContact","contactId","filterContactsHandler","getFilteredContacts","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,wB,mLC2DXC,E,4MAxDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,SAACC,GACnB,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAE1BE,iBAAmB,SAACJ,GAClBA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OAEzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMW,UAAWC,IAAOC,KAAMJ,SAAUK,KAAKR,iBAA7C,UACE,yCAEE,uBACES,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOU,KAAKhB,MAAMC,KAClBoB,SAAUL,KAAKb,uBAGnB,2CAEE,uBACEc,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRd,MAAOU,KAAKhB,MAAME,OAClBmB,SAAUL,KAAKb,uBAGnB,wBAAQc,KAAK,SAAb,gC,GApDkBK,a,iBCWXC,EAXA,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAUf,EAAb,EAAaA,MAAb,OACb,0DAEE,uBAAOO,UAAWC,IAAOU,MAAOH,SAAUA,EAAUf,MAAOA,Q,gBCuBhDmB,EA1BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBAClC,OACE,oBAAId,UAAWC,IAAOW,YAAtB,SACGC,EAAYE,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACf,qBAAIW,UAAWC,IAAOgB,KAAtB,UACE,8BAAI7B,EAAJ,QACA,+BAAOC,IACP,wBAAQW,UAAWC,IAAOiB,OAAQC,QAAS,kBAAML,EAAgBE,IAAjE,uBAH+BA,SC2E1BI,E,4MA1EbjC,MAAQ,CACNkC,SAAU,GACVC,OAAQ,I,EAcVC,WAAa,YAAuB,IAApBnC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACdmC,EAAc,CAClBR,GAAIS,cACJrC,KAAMA,EACNC,OAAQA,GAEc,EAAKF,MAAMkC,SAASN,KAAI,SAACW,GAAD,OAAaA,EAAQtC,QAEjDuC,SAASH,EAAYpC,MACvCwC,MAAM,GAAD,OAAIJ,EAAYpC,KAAhB,4BAEL,EAAKM,UAAS,SAACmC,GAAD,MAAgB,CAC5BR,SAAS,GAAD,mBAAMQ,EAAUR,UAAhB,CAA0BG,S,EAKxCM,cAAgB,SAACC,GACf,EAAKrC,UAAS,SAACmC,GAAD,MAAgB,CAC5BR,SAAUQ,EAAUR,SAASC,QAC3B,SAACI,GAAD,OAAaA,EAAQV,KAAOe,U,EAKlCC,sBAAwB,SAACzC,GACvB,EAAKG,SAAS,CAAE4B,OAAQ/B,EAAEC,cAAcC,S,EAG1CwC,oBAAsB,WACpB,MAA6B,EAAK9C,MAA1BmC,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SAEVa,EAAmBZ,EAAOa,cAChC,OAAOd,EAASC,QAAO,SAACI,GAAD,OACrBA,EAAQtC,KAAK+C,cAAcR,SAASO,O,uDA9CxC,WACE,IAAMb,EAAWe,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMnB,GAC9BiB,GACFnC,KAAKT,SAAS,CAAE2B,SAAUiB,M,gCAG9B,SAAmBG,EAAWZ,GACxB1B,KAAKhB,MAAMkC,WAAaQ,EAAUR,UACpCe,aAAaM,QAAQ,WAAYH,KAAKI,UAAUxC,KAAKhB,MAAMkC,a,oBAyC/D,WACE,IAAMuB,EAAmBzC,KAAK8B,sBAC9B,OACE,sBAAKjC,UAAU,UAAf,UACE,2CACA,cAAC,EAAD,CAAaF,SAAUK,KAAKoB,aAC5B,2CACA,cAAC,EAAD,CACEf,SAAUL,KAAK6B,sBACfvC,MAAOU,KAAKhB,MAAMmC,SAEpB,cAAC,EAAD,CACET,YAAa+B,EACb9B,gBAAiBX,KAAK2B,uB,GApEdrB,a,MCFlBoC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BjE,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.4d04c314.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1JOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1gUKP\"};","import { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onChange, value }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input className={styles.input} onChange={onChange} value={value} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n};\r\nexport default Filter;\r\n","import styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => {\r\n  return (\r\n    <ol className={styles.ContactList}>\r\n      {contactList.map(({ id, name, number }) => (\r\n        <li className={styles.item} key={id}>\r\n          <b>{name}: </b>\r\n          <span>{number}</span>\r\n          <button className={styles.button} onClick={() => onDeleteContact(id)}>\r\n            remoove\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  addContact = ({ name, number }) => {\r\n    const newContacts = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    const currentContacts = this.state.contacts.map((contact) => contact.name);\r\n\r\n    if (currentContacts.includes(newContacts.name)) {\r\n      alert(`${newContacts.name} is alredy in contacts!`);\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, newContacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  filterContactsHandler = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <div className=\"Wrapper\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts:</h2>\r\n        <Filter\r\n          onChange={this.filterContactsHandler}\r\n          value={this.state.filter}\r\n        />\r\n        <ContactList\r\n          contactList={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1uP1q\",\"item\":\"ContactList_item__2CNMi\",\"button\":\"ContactList_button__2mDWw\"};"],"sourceRoot":""}