{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","className","styles","form","preventDefault","type","pattern","title","required","onChange","Filter","input","ContactList","contactList","onDeleteContact","map","id","item","button","onClick","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","newContacts","uuidv4","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQA6DeA,EA1DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAaN,OACE,uBAAMC,UAAWC,IAAOC,KAAMZ,SAXP,SAACO,GACxBA,EAAEM,iBAEFb,EAAUE,EAAME,GAGhBD,EAAQ,IACRE,EAAU,KAIV,UACE,yCAEE,uBACES,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,MAAOP,EACPgB,SAAUZ,OAGd,2CAEE,uBACEQ,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,MAAOL,EACPc,SAAUZ,OAGd,wBAAQQ,KAAK,SAAb,6B,gBC3CSK,EAXA,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUT,EAAb,EAAaA,MAAb,OACb,0DAEE,uBAAOC,UAAWC,IAAOS,MAAOF,SAAUA,EAAUT,MAAOA,Q,gBCuBhDY,EA1BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIb,UAAWC,IAAOU,YAAtB,SACGC,EAAYE,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACf,qBAAIM,UAAWC,IAAOe,KAAtB,UACE,8BAAIxB,EAAJ,QACA,+BAAOE,IACP,wBAAQM,UAAWC,IAAOgB,OAAQC,QAAS,kBAAML,EAAgBE,IAAjE,uBAH+BA,SC0D1BI,EA1DH,WACV,MAAgC5B,oBAC9B,kCAAM6B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA7C,QAA6D,MAD/D,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA4BnC,mBAAS,IAArC,mBAAOoC,EAAP,KAAeC,EAAf,KAEAC,qBACE,kBAAMP,OAAOC,aAAaO,QAAQ,WAAYV,KAAKW,UAAUN,MAC7D,CAACA,IAGH,IAgCMO,EAPsB,WAC1B,IAAMC,EAAmBN,EAAOO,cAChC,OAAOT,EAASE,QAAO,SAACQ,GAAD,OACrBA,EAAQ3C,KAAK0C,cAAcE,SAASH,MAIfI,GACzB,OACE,sBAAKrC,UAAU,UAAf,UACE,2CACA,cAAC,EAAD,CAAaV,SApCE,SAACE,EAAME,GACxB,IAAM4C,EAAc,CAClBvB,GAAIwB,cACJ/C,KAAMA,EACNE,OAAQA,GAEc+B,EAASX,KAAI,SAACqB,GAAD,OAAaA,EAAQ3C,QAEtC4C,SAASE,EAAY9C,MACvCgD,MAAM,GAAD,OAAIF,EAAY9C,KAAhB,4BAELkC,GAAY,SAACe,GAAD,4BAAmBA,GAAnB,CAA8BH,UA0B1C,2CACA,cAAC,EAAD,CAAQ9B,SAjBkB,SAACX,GAC7B+B,EAAU/B,EAAEC,cAAcC,QAgBiBA,MAAO4B,IAChD,cAAC,EAAD,CACEf,YAAaoB,EACbnB,gBA1BgB,SAAC6B,GACrBhB,GAAY,SAACe,GAAD,OACVA,EAAUd,QAAO,SAACc,GAAD,OAAeA,EAAU1B,KAAO2B,e,MC9BvDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,OAAS,8B,kBCA3GD,EAAOC,QAAU,CAAC,KAAO,4B,kBCAzBD,EAAOC,QAAU,CAAC,MAAQ,yB","file":"static/js/main.a7d5b15b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit( name, number );\r\n\r\n    // reset form\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onChange, value }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input className={styles.input} onChange={onChange} value={value} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n};\r\nexport default Filter;\r\n","import styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => {\r\n  return (\r\n    <ol className={styles.ContactList}>\r\n      {contactList.map(({ id, name, number }) => (\r\n        <li className={styles.item} key={id}>\r\n          <b>{name}: </b>\r\n          <span>{number}</span>\r\n          <button className={styles.button} onClick={() => onDeleteContact(id)}>\r\n            remoove\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(\r\n    () => window.localStorage.setItem(\"contacts\", JSON.stringify(contacts)),\r\n    [contacts]\r\n  );\r\n\r\n  const addContact = (name, number) => {\r\n    const newContacts = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    const currentContacts = contacts.map((contact) => contact.name);\r\n\r\n    if (currentContacts.includes(newContacts.name)) {\r\n      alert(`${newContacts.name} is alredy in contacts!`);\r\n    } else {\r\n      setContacts((prevState) => [...prevState, newContacts]);\r\n    }\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts((prevState) =>\r\n      prevState.filter((prevState) => prevState.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const filterContactsHandler = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const filteredContacts = getFilteredContacts();\r\n  return (\r\n    <div className=\"Wrapper\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={addContact} />\r\n      <h2>Contacts:</h2>\r\n      <Filter onChange={filterContactsHandler} value={filter} />\r\n      <ContactList\r\n        contactList={filteredContacts}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1uP1q\",\"item\":\"ContactList_item__2CNMi\",\"button\":\"ContactList_button__2mDWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1JOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1gUKP\"};"],"sourceRoot":""}